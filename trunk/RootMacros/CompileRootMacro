#!/bin/bash

input=$1
output=$2

if [ -z $1 ]; then
   echo "Please specify the source file you want to compile"
   exit
fi

if [ -z $2 ]; then
   output=a.out
fi

shift
shift

root_cflags=`sh $ROOTSYS/bin/root-config --cflags`
root_libs=`sh $ROOTSYS/bin/root-config --glibs`
roofit_libs="-lRooFitCore -lRooFit -lMinuit -lFoam"
fastjet_cflags=
fastjet_libs=
pythia_include="-I$PYTHIA8/include"
pythia_libs="-L$PYTHIA8/lib/archive -lpythia8 -llhapdfdummy"
extrainclude="-I/$HOME/RootMacros"
extralibs=~/RootMacros/Code/library/*.o
cxxflags="-g -fPIC -Wno-deprecated -O -ansi -D_GNU_SOURCE -g -O2"

if [ -n "`command -v fastjet-config`" ]; then
   fastjet_cflags=`fastjet-config --cxxflags`
   fastjet_libs=`fastjet-config --libs`
fi

all_libs=""
all_include=""
all_flags=""

if [ $HOSTNAME == "t3-susy.ultralight.org" ]; then

   roofit_base=/cms/sw/slc5_amd64_gcc462/lcg/roofit/5.32.00-cms5
   
   all_libs="$root_libs $fastjet_libs $pythia_libs -L$roofit_base/lib $roofit_libs $extralibs"
   all_include="$extrainclude $pythia_include -I$roofit_base/include"
   all_flags="$root_cflags $cxxflags $fastjet_cflags -m64"

   # quick fix....
   libs=`echo $libs | sed "s/-lz//g"`

elif [ $HOSTNAME == "pccit28" ]; then

   all_libs="$root_libs $roofit_libs $fastjet_libs $pythia_libs -lMathMore -lHistPainter $extralibs"
   all_flags="$cxxflags $fastjet_cflags $root_cflags"
   all_include="$extrainclude $pythia_include"

   # quick fix....
   libs=`echo $libs | sed "s/-lz//g"`

# elif [[ "$HOSTNAME" == pb-d-*.cern.ch ]]; then   # guess it's macbook - keeps changing
elif [ $HOSTNAME == "FHeadMac" ]; then
   
   all_libs="$root_libs $roofit_libs $fastjet_libs $pythia_libs -lHistPainter"
   all_flags="$cxxflags $fastjet_cflags $root_cflags -m32"
   all_include="$extrainclude $pythia_include"

   # quick fix....
   libs=`echo $libs | sed "s/-lz//g"`

elif [[ "$HOSTNAME" == lxplus*.cern.ch ]]; then

   all_libs="$root_libs -lMathMore"
   all_flags="$root_cflags $cxxflags"
   all_include="$extrainclude"

   if [ -n "$ROOFITSYS" ]; then
      all_libs="$all_libs $rootfit_libs -L$ROOFITSYS/lib"
      all_include="$all_include -I$ROOFITSYS/include"
   fi

   # quick fix....
   libs=`echo $libs | sed "s/-lz//g"`

fi

TextRedColor=$(echo -e '\e[1;31m')
TextYellowColor=$(echo -e '\e[1;34m')
TextGreyColor=$(echo -e '\e[0;37m')
TextNoColor=$(echo -e '\e[0m')

echo g++ $input $all_libs $all_include $all_flags "$@" -o $output
g++ $input $all_libs $all_include $all_flags "$@" -o $output 2>&1 | \
   sed -e "s#\(g++:[.A-Za-z0-9 /-]*: linker input file unused because linking not done\)#${TextGreyColor}\1${TextNoColor}#g" | \
   sed -e "s#\(g++: \)\(warning:\)\([.A-Za-z0-9 /-]*: linker input file unused because linking not done\)#${TextGreyColor}\1${TextNoColor}${TextGreyColor}\2${TextNoColor}${TextGreyColor}\3${TextNoColor}#g" | \
   sed -e "s/\([Ee][Rr][Rr][Oo][Rr]\)/${TextRedColor}\1${TextNoColor}/g" | \
   sed -e "s/\(undefined reference\)/${TextRedColor}\1${TextNoColor}/g" | \
   sed -e "s/\(multiple definition\)/${TextRedColor}\1${TextNoColor}/g" | \
   sed -e "s/\([Ww][Aa][Rr][Nn][Ii][Nn][Gg]\)/${TextYellowColor}\1${TextNoColor}/g"
   
   # sed -e "s/^\(g++*unused because linking not done\)$/${TextGreyColor}\1${TextNoColor}/g" | \


